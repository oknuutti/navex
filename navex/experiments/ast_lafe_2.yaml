search:
  method: 'asha-bo'
  resume: ''
  metric: 'val_loss_epoch'
  mode: 'min'
  samples: 243
  nodes: 6
  node_types: 'volta'   # volta for triton, type_gpu for csc

  # doesnt really work to have different cpu counts as tune.run(..., resources_per_trial={"cpu":...}) needs to be set
  node_type_cpus: '6'
  grace_period: 301
  reduction_factor: 3
  username: ''
  keyfile: ''
  proxy: ''
  host: ''
  port: 0

training:
  trial: 'astst'
  name: 'ast_lafe'
  cache: 'cache'
  output: 'output'
  batch_size: 32
  batch_mem: 32000
  gpu: 1
  epochs: 6021
  print_freq: 5
  test_freq: 301
  save_freq: 1
  resume: null
  evaluate: 0
  pretrained: ''
  early_stopping: 0
  reduced_precision: 0
  auto_lr_find: 0
  deterministic: 1
  accuracy:
    det_mode: 'nms'
    det_kernel_size: 3

model:
  arch:             "mob-mn2_M"   # "mob-mn2_M", "mob-mn3_L", "mob-en_L"
  in_channels:      1
  partial_residual: 0
  width_mult:       1.0
  pretrained: 0         # not in use
  cache_dir: 'cache'    # not in use
  des_head:  # should add 3x3 vs 5x5 kernel in hidden layer? or do preliminary testing?
    dimensions:  128
    hidden_ch:   256   # !h_tune2_randint   '(128, 128), (96, 192)'
    exp_coef:    12.0  # !h_tune2_uniform  '(5.5, 6.5), (1.0, 12.0)'
    use_se:      1     # !h_tune2_choice   '[0], [0, 1]'
    dropout:     0.0
  det_head:  # should add 3x3 vs 5x5 kernel in hidden layer? or do preliminary testing?
    after_des:   0
    hidden_ch:   0   # !h_tune2_randint   '(65, 65), (0, 130)'
    exp_coef:    0.0  # !h_tune2_uniform  '(5.5, 6.5), (1.0, 12.0)'
    use_se:      0    # !h_tune2_choice   '[0], [0, 1]'
    dropout:     0.0
    act_fn_type: 'R2D2'
  qlt_head:
    skip:        1
    after_des:   0
    hidden_ch:   0
    exp_coef:    0.0
    use_se:      0
    dropout:     0.0
    act_fn_type: 'R2D2'

loss:
  teacher: 'data/models/ast_hafe_lr2d2_242.ckpt'
  des_loss: 'L1'    # L1, MSE, L2, SmoothL1, TODO: test these, select best
  des_w: -15.0     # weight for descriptor head loss
  det_w: -1.5      # weight for detector head loss
  qlt_w: -1.5      # weight for quality head loss

optimizer:
  method: 'adam'
  learning_rate: 0.001
  weight_decay:  0.0000001   # !h_tune2_loguniform  '(0.9e-6, 1.1e-6), (1e-9, 1e-4)'
  split_params:  0
  eps:           0.00000001   # tried to optimize, doesn't seem to affect much

data:
  max_sc:    1.091  # 2**(1/8), half of scale steps used during extraction, i.e. 2**(1/4)
  max_rot:   0.0    # in degrees, synth pair warp related
  max_shear: 0.0    # synth pair warp related
  max_proj:  0.5    # synth pair warp related
  noise_max: 0.05
  rnd_gain:  1.2
  student_rnd_gain: 1.0    # !h_tune2_uniform '(1.08, 1.12), (1.0, 1.3)'
  student_noise_sd: 0.0  # !h_tune2_uniform '(0.02, 0.03), (0.00, 0.10)'
  image_size: 512
  path: 'data'
  use_synth: 0
  npy: 'false'
  trn_ratio: 0.85
  val_ratio: 0.15
  tst_ratio: 0.00  # different test set altogether (itokawa)
  workers: 6
