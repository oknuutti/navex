search:
  method: 'asha-bo'
  resume: ''
  metric: 'val_tot_epoch'
  mode: 'max'
  samples: 1
  nodes: 1
  node_types: 'volta'

  # doesnt really work to have different cpu counts as tune.run(..., resources_per_trial={"cpu":...}) needs to be set
  node_type_cpus: '6'
  grace_period: 1500       # for asha only
  reduction_factor: 3   # for asha only
  username: ''
  keyfile: ''
  proxy: ''
  host: ''
  port: 0

training:
  trial: 'ast'
  name: 'v0'
  cache: 'cache'
  output: 'output'
  batch_size: !h_int 8
  batch_mem: 32000
  gpu: 1
  epochs: 24001
  print_freq: 5
  test_freq: 1500   # validation interval in steps
  save_freq: 1
  resume: null
  evaluate: 0
  pretrained: ''
  early_stopping: 0
  reduced_precision: !h_int 0
  auto_lr_find: 0
  deterministic: 1

model:
  arch: !h_str 'disk-def'
  in_channels: !h_int 1
  partial_residual: 0   # not in use
  width_mult:       !h_float  1.0
  pretrained: 0         # not in use
  cache_dir: 'cache'    # not in use
  des_head:
    dimensions:  !h_int 128
    hidden_ch:   !h_int 0
    exp_coef:    0.0
    use_se:      0
    dropout:     0.0
  det_head:
    after_des:   !h_int 0
    hidden_ch:   !h_int 0
    exp_coef:    0.0
    use_se:      0
    dropout:     0.0
    act_fn_type: 'R2D2'
  qlt_head:
    skip:        !h_int 1
    after_des:   !h_int 1
    hidden_ch:   !h_int 0
    exp_coef:    0.0
    use_se:      0
    dropout:     0.0
    act_fn_type: 'R2D2'

loss:
  loss_type: !h_str 'disk-p'
  wpk: !h_float  1e-3  # recycled param: sampling_cost for disk
  wdt: !h_float  0.25  # recycled param: penalty for disk
  wap: 1.0             # N/A
  wqt: 1.0             # recycled param: reward for disk
  det_n: !h_int  8     # detector neighbourhood size
  base: !h_float 50    # recycled param: match_theta for disk
  nq: !h_int     1500  # recycled param: warmup_batch_scale for disk
  sampler:
    subq: -8             # N/A
    subd: !h_float 1.0   # recycled param: sampling_cost_coef for disk
    pos_d: !h_float 1.5  # disk max repr err to still consider successful match
    neg_d: 10            # N/A
    ngh: 2               # N/A
    border: 16           #
    subd_neg: -8         # N/A
    max_neg_b: !h_int 4    # matches across these many (n-1) other mini-batch pairs   (alias: --max-neg-imgs)
    maxpool_pos: !h_int 0  # recycled param: sample_matches, i.e. use ground truth to select features from img2

optimizer:
  method: 'adam'
  learning_rate: !h_float 1e-3
  weight_decay: !h_float 1e-6
  split_params: 0
  eps: !h_float 1e-8

data:
  max_sc:  !h_float 1.091    # 2**(1/8), half of scale steps used during extraction, i.e. 2**(1/4)
  max_rot: !h_float 10.0     # in degrees, synth pair warp related
  max_shear: !h_float 0.0    # synth pair warp related
  max_proj: !h_float 0.75    # synth pair warp related
  noise_max: !h_float 0.03
  rnd_gain: !h_float 1.2
  image_size: !h_int 224
  path: 'data'
  npy: 'false'
  trn_ratio: 0.85
  val_ratio: 0.15
  tst_ratio: 0.00   # different test set altogether (itokawa)
  workers: 6
