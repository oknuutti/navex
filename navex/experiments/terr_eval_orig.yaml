

training:
  name: 'v0'
  cache: 'c:/project-data/navex/cache'
  output: 'd:/projects/navex/output'
  batch_size: 32
  batch_mem: 32000
  epochs: 10
  print_freq: 10
  test_freq: 1
  save_freq: 10
  resume: false
  evaluate: false
  pretrained: ''
  early_stopping: 50

model:
  arch: 'R2D2'
  head_conv_ch: 256
  descriptor_dim: 128
  width_mult: 1.0
  dropout: 0.2
  excl_bn_affine: true
  batch_norm: true
  direct_detection: false
  pretrained: false
  cache_dir: 'c:/project-data/navex/cache'

loss:
  wp: 1.0
  wc: 1.0
  wa: 1.0
  det_n: 16
  base: 0.5
  nq: 20
  sampler:        # was for descriptor head output size [192, 192]
    ngh: 19       # was 7       # neighbourhood size in descriptor cells
    subq: -21     # was -8      # grid step size for positive samples
    subd: 2       # was 1       # neighbourhood sampling interval
    pos_d: 5      # was 2       # positive samples generated up to this far from ideal location
    neg_d: 13     # was 5       # negative samples generated starting from distance from ideal location
    border: 32    # was 16
    subd_neg: -21 # was -8      # grid step size for generating additional negative samples (distractors)
    max_neg_b: 4                # distractors mined from max this number of images from same batch
    maxpool_pos: True           # False: use all positive samples, or True: only the best matching one

optimizer:
  method: 'adam'
  learning_rate: 1e-3
  weight_decay: 2e-5
  split_params: false
  eps: !!float 1e-8

data:
  path: 'c:/project-data/navex/data/aachen'
  trn_ratio: 0.8
  val_ratio: 0.1
  tst_ratio: 0.1
  workers: 4
